name: Release
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to set (if empty, action increases previous release minnor version)'
        required: false
        default: ''
jobs:
  getversion:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.version == '' }}
    steps:
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - uses: actions/setup-python@v2
      name: Set up Python
    - name: Dump GitHub context
      run: echo "$GITHUB_CONTEXT=$GITHUB_CONTEXT"
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
    - name: Dump env context
      run: echo "$ENV_CONTEXT=$ENV_CONTEXT"
      env:
        ENV_CONTEXT: ${{ toJSON(env) }}
    - name: Get current version 0
      run: mvn help:evaluate -Dexpression=project.version -q -DforceStdout
    - name: Get current version
      run: echo "CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
    - name: Get current version 3
      run: echo "CURRENT_VERSION=$CURRENT_VERSION"
      env:
          CURRENT_VERSION: "$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"
    - name: Dump env context 2
      run: echo "$ENV_CONTEXT=$ENV_CONTEXT"
      env:
        ENV_CONTEXT: ${{ toJSON(env) }}
    - name: pwd
      run: pwd
    - name: ls
      run: ls -lhas
    - name: Get next version
      run: echo "NEXT_VERSION=$(python contrib/bump-version.py --current-version=$CURRENT_VERSION --suffixes=-SNAPSHOT)" >> $GITHUB_ENV
    - name: Dump env context 3
      run: echo "$ENV_CONTEXT=$ENV_CONTEXT"
      env:
        ENV_CONTEXT: ${{ toJSON(env) }}



  changelog:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - run: |
        echo "$NEXT_VERSION"
    - run: |
        mkdir -p release/${NEXT_VERSION}
        contrib/changelog-md.sh > release/${NEXT_VERSION}/changelog.md
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add release
        git commit -m "release ${NEXT_VERSION}"
        git push
    #- name: Echo result
    #  run: |
    #    echo "${{ steps.runactionrelease.outputs.version }}"


